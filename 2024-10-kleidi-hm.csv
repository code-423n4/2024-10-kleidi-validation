issue,title,primary finding,validator comment,status,root cause (URL),size,robotLabel
findings-2,Unable to set to check consecutive parameters,findings-2,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,169,:robot:_primary
findings-4,Guardian can be DoSed by submitting many transactions at once,findings-4,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,54,:robot:_primary
findings-5,Attackers that have compromised signer keys can financially overwhelm the protocol to take it over,findings-5,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L521,31,:robot:_19_group
validation-102,Unrestricted Call Operations in Guard.sol, ,insufficient proof,Unsatisfactory,,207,:robot:_54_group
validation-104,Insecure Signature Generation in InstanceDeployer.sol, ,insufficient proof,Unsatisfactory,,145,:robot:_33_group
validation-105,Improper Signature Verification in RecoverySpell.sol, ,insufficient proof - spamming - not validating further,Unsatisfactory,,98,:robot:_102_group
validation-106,Use of Undefined EVM Opcodes in RecoverySpell.sol, ,insufficient proof,Unsatisfactory,,105,:robot:_primary
validation-107, Reentrancy Attack via Improper State Update in Timelock.sol, ,insufficient proof,Unsatisfactory,,189,:robot:_13_group
validation-109,Executing Recovery Operations on Certain EVM Chains will Fail, ,"the protocol will be deployed on Arbitrum,Ethereum,Optimism,Base - https://github.com/code-423n4/2024-10-kleidi?tab=readme-ov-file#general-questions",Unsatisfactory,,59,:robot:_primary
validation-111,The removeCalldataCheckDatahash function may fail to be called, ,insufficient proof,Unsatisfactory,,45,:robot:_02_group
validation-112,"There are flaws in the _removeCalldataCheck logic, resulting in data residue. Eventually, there will be unexpected calldata that can be called.", ,the submission does not refer to a specific vulnerabilitry and remains vague,Unsatisfactory,,88,:robot:_02_group
validation-113,Expiration Period Bypass Allows Execution of Expired Operations, ,insufficient proof,Unsatisfactory,,45,:robot:_11_group
validation-114,Reentrancy in Batch Execution Allows DoS, ,insufficient proof,Unsatisfactory,,51,:robot:_13_group
validation-115,Unsafe Execution of Whitelisted Calls Allows Potentially Malicious Payloads, ,OOS -> known issue,Unsatisfactory,,70,:robot:_18_group
validation-117,_removeCalldataCheck function call may revert. Because the same dataHashe may cause the add function to revert, ,invalid - as addCallDataCheck doesnt allow duplicate hash,Unsatisfactory,,40,:robot:_primary
validation-118,"When safe's private key is leaked, the protocol cannot be protected by pause, and the attacker can prevent pause.",findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,44,:robot:_06_group
validation-120,Potential Index Mismatch in Timelock Contract, ,The function already ensures that duplicate indexes cannot exist due to the overlap check.,Unsatisfactory,,43,:robot:_21_group
validation-121,"Missing Return Value Check in _revokeRole(HOT_SIGNER_ROLE, deprecatedHotSigner)", ,Should be in the QA report as the submission is inflated and does not hold the bar to be an audit report,Unsatisfactory,,51,:robot:_primary
validation-124,Access Control Issue in Role Management Functions, ,insufficient proof,Unsatisfactory,,50,:robot:_primary
validation-125,Legitimate proposal might be unable to call `updateExpirationPeriod()` due to `_afterCall()` validation,validation-182, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L608,166,:robot:_primary
validation-126,Intended configuration of `recoveryDelay < timelockDelay` allows for malicious takeover by recovery spells,validation-126,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/RecoverySpell.sol#L95-L127,36,:robot:_38_group
validation-127,Array Index Mismanagement in Calldata Check Addition, ,insufficient proof,Unsatisfactory,,64,:robot:_21_group
validation-128,Recovery factory doesn't check if there is at least one new owner., ,"the new owner is used referring to the spell owners as the previous wording is ""There are no duplicate new owners."" - so it does not refer to the existing Safe owners in this context",Unsatisfactory,,151,:robot:_03_group
validation-13,Contracts cannot be deployed on arbitrum and optimism,validation-13,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/deploy/SystemDeploy.s.sol#L21-L28,52,:robot:_primary
validation-130,`_execute` function Fails to Handle Ether Transfers Due to Missing `payable` Modifier, ,invalid - _execute is a private function and does not receive Ether directly from external calls,Unsatisfactory,,36,:robot:_77_group
validation-131,Potential Denial-of-Service (DoS) in Timelock `pause` Function,findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,34,:robot:_06_group
validation-134,Inefficient Array Element Removal in` _removeCalldataCheck` Function, ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,62,:robot:_02_group
validation-137,Wrench attack resistance does not provide the advertised security guarantees, ,known issue: https://github.com/solidity-labs-io/kleidi/blob/main/docs/EDGECASES.md#malicious-collusion,Unsatisfactory,,66,:robot:_05_group
validation-138,Protection against malicious recovery spells is not sufficient in case of multiple recovery spells,validation-138,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/RecoverySpellFactory.sol#L44-L78,58,:robot:_38_group
validation-14,Invalid Validation in `_addCalldataCheck` is causing dead bytes in payload,findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,254,:robot:_10_group
validation-140,Wildcard Entry in Calldata Validation Allows Bypass of Stricter Checks, ,"the submission does not refer how the wildcard will be abused, the protocol assumes that hot & cold signers are trusted",Unsatisfactory,,102,:robot:_86_group
validation-141, 'abi.encodepacked()' with Dynamic Types, ,Should be in the QA report as the submission is inflated and does not hold the bar to be an audit report,Unsatisfactory,,27,:robot:_45_group
validation-142,Uninitialized Storage Pointer in 2024-10-kleidi/src/ConfigurablePause.sol, ,spam - not validating the further from the competitor,Unsatisfactory,,200,:robot:_primary
validation-144,Delegatecall Injection in 2024-10-kleidi/blob/main/src/Guard.sol, ,spam,Unsatisfactory,,128,:robot:_17_group
validation-145,Unprotected Self Destruct in 2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Guard.sol, ,spam,Unsatisfactory,,106,:robot:_96_group
validation-146,Out of Bounds Read in BytesHelper.sol https://github.com/code-423n4/2024-10-kleidi/blob/main/src/BytesHelper.sol, ,spam,Unsatisfactory,,187,:robot:_28_group
validation-148,Missing Pause Time Checks in `_updatePauseDuration` Function,validation-284, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/ConfigurablePause.sol#L104,60,:robot:_07_group
validation-149,Missing `onlyOwner` Modifier for `_grantGuardian` Function, ,Invalid - onlyTimeLock,Unsatisfactory,,44,:robot:_primary
validation-15,Expired executions can be re-executable in certain conditions,validation-15,primay,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L413-L422,70,:robot:_11_group
validation-150,Potential `EIP712` violation, ,the protocol does not endorse any EIP compliance - https://github.com/code-423n4/2024-10-kleidi#eip-compliance,Unsatisfactory,,70,:robot:_53_group
validation-151,Missing Authorization for Timelock in `revokeHotSigner` Function, ,NATSPEC mismatch and the case is handled as per the audit report pdf,Unsatisfactory,,28,:robot:_35_group
validation-152,Non-Standard Signature Usage in InstanceDeployer Contract, ,insufficient proof,Unsatisfactory,,83,:robot:_primary
validation-153,Recovery Failure Due to Ablity to Set Contracts as RecoverySpell Owners,validation-153,primary,Satisfactory,https://github.com/solidity-labs-io/kleidi/blob/0d72b6cb5725c1380212dc76257da96fcfacf22f/src/RecoverySpellFactory.sol#L37-L78,102,:robot:_01_group
validation-154,"Lack of Validation for Recovery Spell Addresses in InstanceDeployer To Ensure They're actually Recovery Spell Contracts, This May Lead to Enabling Non-functional or Malicious Contract/EOA as Safe Modules",validation-154,primary,Satisfactory,https://github.com/solidity-labs-io/kleidi/blob/0d72b6cb5725c1380212dc76257da96fcfacf22f/src/InstanceDeployer.sol#L274-L291,76,:robot:_01_group
validation-155,"Absence of Single Recovery Spell Requirement When Deploying Safe, Could Lead to Inability to Recover Safe After Deployment If Owners Lost Keys", ,"this will revert by the safe with the statement: require(module != address(0) && module != SENTINEL_MODULES, ""GS101"");",Unsatisfactory,,74,:robot:_01_group
validation-156,"Lack of Setter Functions Inside the InstanceDeployer, Will Lead to Deploying the Same Contract Again Incase of Wrong Address Assignment to a State", ,this is the intended design as the addresses are assumed to be the same on each chains,Unsatisfactory,,82,:robot:_primary
validation-157,"Missing New Recovery Spell Replacement in the Recovery Process, To Ensure Safe Can Be Saved Again",validation-63,duping under validation-63 due to same logic,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpell.sol#L165-L317,111,:robot:_primary
validation-158,Lack of index validation in `getSliceBytesHash` function, ,inflated-does not hold th ebar for being a report,Unsatisfactory,,28,:robot:_primary
validation-159,Potential DoS Due to Retrieving Large Number of Proposals or Calldatas in Functions that Modify State ,findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,83,:robot:_06_group
validation-16,DoS in `pause()` function in certain conditions,findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,64,:robot:_06_group
validation-160,Lack of Fund Recovery Mechanism for Expired Proposals in Timelock Contract, ,spammish - not validating further,Unsatisfactory,,106,:robot:_primary
validation-161,Missing Validation to Ensure Hot Signers are Safe Owners,validation-161,primary - natspec collision?,Satisfactory,https://github.com/solidity-labs-io/kleidi/blob/0d72b6cb5725c1380212dc76257da96fcfacf22f/src/Timelock.sol#L52,43,:robot:_primary
validation-162,Dangerous Implementation of Wildcard Functionality Can Lead to Unexpected Critical Incidents In Some Scenarios,validation-161,primary - not a bug but an insight - holding the bar to be an audit report - validating,Satisfactory,https://github.com/solidity-labs-io/kleidi/blob/0d72b6cb5725c1380212dc76257da96fcfacf22f/src/Timelock.sol#L1028-L1155,41,:robot:_primary
validation-163,Hot Signer Can Pass Arbitrary Data to Partially Whitelisted Functions,validation-163,primary,Satisfactory,https://github.com/solidity-labs-io/kleidi/blob/0d72b6cb5725c1380212dc76257da96fcfacf22f/src/Timelock.sol#L1028-L1155,66,:robot:_08_group
validation-164,"Calldata Removal Related Functions, Should Inherit `onlySafe` modifier instead of `onlyTimelock`, so Safe can Remove Unsafe Calldatas Immediately", ,"as the hot and cold signers are assumed to be trusted, these calldatas will not be executed as well as there wont be any schedule for those by the safe, else, it can be anytime cancelled by cancel()",Unsatisfactory,,38,:robot:_primary
validation-165,Improper signature verification in recovery spell allowing incompatible smart contract owners,validation-153, ,Satisfactory,https://github.com/solidity-labs-io/kleidi/blob/0d72b6cb5725c1380212dc76257da96fcfacf22f/src/RecoverySpellFactory.sol#L37-L78,62,:robot:_23_group
validation-166,hash collisions can occur because abi.encodePacked() is used with hashing operations of keccak256(), ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,42,:robot:_primary
validation-167,`addCalldataCheck()` will always revert when more than 1 parameter is whitelisted for the callDatas.,findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,110,:robot:_10_group
validation-168,Contracts can be exploited when briefly unpaused during _updatePauseDuration, ,invalid,Unsatisfactory,,31,:robot:_07_group
validation-17,Deploy script is trying to deploy to wrong chains,validation-13, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/deploy/SystemDeploy.s.sol#L21-L28,107,:robot:_22_group
validation-174,Hardcoded salt which can replay attacks across different chains or environments, ,invalid,Unsatisfactory,,20,:robot:_primary
validation-176,Out of Bounds Read in 2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/BytesHelper.sol, ,spam,Unsatisfactory,,185,:robot:_primary
validation-177,"Critical bug in InstanceDeployer blocks system instance creation, rendering the Kleidi system unusable", ,"The check require(msg.sender == currentOwner || approvedHashes[currentOwner][dataHash] != 0, ""GS025""); will pass because msg.sender is the InstanceDeployer contract, which is the same as currentOwner when the signature is constructed",Unsatisfactory,,305,:robot:_primary
validation-178,Scheduled operations will take more delay time on Pausing Guardian., ,this is the intended mechanism as it breaks the composition of the operation readiness anyway after an emergency,Unsatisfactory,,49,:robot:_primary
validation-179,Lack of Access Control that can lead to unauthorized Deployment of contract, ,spam,Unsatisfactory,,33,:robot:_primary
validation-18,"Even if the users use batch operations, removing calldata with indexes can cause unexpected behaviours",validation-18,primary,Satisfactory,https://github.com/solidity-labs-io/kleidi/blob/0d72b6cb5725c1380212dc76257da96fcfacf22f/src/Timelock.sol#L1193-L1243,119,:robot:_primary
validation-180,Batch Operations will be DOSed by an executed operation , ,that´s why the function has the salt input,Unsatisfactory,,101,:robot:_15_group
validation-182,UpdateExpirattionPeriod() cannot be execute when the newExpirationPeriod is less than currentExpirationPeriod.,validation-182,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L608,101,:robot:_primary
validation-183,Unchecked Contract Deployment can lead to system inconsistencies or malicious deployments., ,spam,Unsatisfactory,,25,:robot:_00_group
validation-185,No Rollback/Recovery Mechanism that cause inconsistent system state if deployments fail midway., ,spam,Unsatisfactory,,32,:robot:_00_group
validation-187,Immutable Bytecode Check Issue can lead to erroneous assumptions about deployed contracts., ,spam,Unsatisfactory,,25,:robot:_primary
validation-188,Order of Execution Vulnerability in Timelock Functions Allowing Frontrunning of Critical Operations, ,OOS -> Q-02,Unsatisfactory,,41,:robot:_16_group
validation-189,Static Address Assumptions can cause interaction with outdated or incorrect contracts in the future., ,spam,Unsatisfactory,,43,:robot:_primary
validation-190,Missing whenNotPaused Check in updatePauseDuration Function May Lead to Inconsistent Behavior,validation-284, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/ConfigurablePause.sol#L104,43,:robot:_07_group
validation-192,Unprotected Self-Destruct in 2024-10-kleidi/src/TimelockFactory.sol, ,spam,Unsatisfactory,,135,:robot:_primary
validation-195,Invariant that safe can only call itself with empty calldata can be broken, ,OOS -> Q-15,Unsatisfactory,,43,:robot:_primary
validation-196,The same address in original owner set and recovery owner set can lead to permanent DoS,validation-40,,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpellFactory.sol#L118-L138,84,:robot:_primary
validation-197,Missing Access Controls in TimelockFactory.sol Allow Unauthorized Manipulation of Contract State, ,spam,Unsatisfactory,,89,:robot:_49_group
validation-198,External contract integrating with recovery spells can break due to `delay = 0` not being supported, ,inflated and does not hold the bar to be an audit report,Unsatisfactory,,52,:robot:_38_group
validation-199,Delegatecall Injection in RecoverySpell.sol, ,spam,Unsatisfactory,,366,:robot:_17_group
validation-2,should delete timestamps[id] when  clean up an expired timelock action, ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,37,:robot:_primary
validation-200,`checkCalldata()` does not check for calldata length and a hot signer can execute unexpected logic, ,OOS-> https://github.com/code-423n4/2024-10-kleidi?tab=readme-ov-file#all-trusted-roles-in-the-protocol && also a known issue,Unsatisfactory,,50,:robot:_18_group
validation-201,Compromised cold signers can take over the safe by scheduling too many proposals which causes `pause()` to revert,findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,127,:robot:_06_group
validation-202,Hot signers can drain native funds due to missing `value` validation, ,OOS-> https://github.com/solidity-labs-io/kleidi/blob/main/docs/EDGECASES.md#wrapped-vs-raw-ether,Unsatisfactory,,45,:robot:_70_group
validation-203,Calldata checks require an unvalidated byte in between calldata segments which leads to flawed validation,findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,109,:robot:_10_group
validation-204,"Reentrancy Vulnerability in Timelock.sol Allows Repeated Function Calls, Leading to Potential Fund Drain or State Manipulation", ,spam,Unsatisfactory,,105,:robot:_13_group
validation-205,`executeRecoverySpell()` can revert due to check in `OwnerManager.swapOwner()` and causes safe to be compromised,validation-40,,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpellFactory.sol#L118-L138,155,:robot:_36_group
validation-206,Delegatecall Injection in InstanceDeployer.sol leads to Arbitrary Code Execution , ,spam,Unsatisfactory,,163,:robot:_primary
validation-207,Potential Reentrancy Vulnerability in executeRecovery Function in RecoverySpell.so, ,spam,Unsatisfactory,,52,:robot:_26_group
validation-208,Unable to create a calldata check immediately adjacent to an existing one,findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,136,:robot:_primary
validation-209,Potential Reentrancy Attack in Timelock Execution, ,insufficient proof,Unsatisfactory,,41,:robot:_13_group
validation-21,"Missing boundary checks on `recoveryThreshold` in `RecoverySpellFactory` contract allow the `recoveryThreshold` to be set to 0, meaning that the recovery process could be executed without requiring any owner signatures", ,insufficient proof,Unsatisfactory,,132,:robot:_01_group
validation-211,Insufficient Access Control in `grantRole` and `revokeRole` Function, ,insufficient proof,Unsatisfactory,,64,:robot:_69_group
validation-212,Lack of payable when deploying contracts, ,none of the contracts being deployed within the deploy function require Ether in their constructors,Unsatisfactory,,53,:robot:_primary
validation-213,Kleidi's pausing functionality is broken,validation-284, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/ConfigurablePause.sol#L104,126,:robot:_primary
validation-214,Unsupported opcode in Solidity v0.8.25 prevents Kleidi contracts from deploying on Arbitrum,validation-214,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/RecoverySpell.sol#L1,26,:robot:_primary
validation-216,"Immutable Recovery threshold limits flexibility, risking loss of Safe access in critical scenarios",validation-63,I duped under validation-63 as they share the same logic of inflexibility,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpell.sol#L165-L317,24,:robot:_primary
validation-217,Address Collision Risks Associated with Hardcoded Salt Values in the SystemDeploy Contract, ,insufficient proof,Unsatisfactory,,24,:robot:_40_group
validation-219,Gas Griefing/Theft Possible Due to Unsafe External Call, ,OOS -> https://github.com/code-423n4/2024-10-kleidi/blob/main/4naly3er-report.md#L-2,Unsatisfactory,,71,:robot:_19_group
validation-22,The pause function in the Timelock contract could be temporarily subjected to a DoS attack due to the unbounded iteration over the liveProposals array.,findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,26,:robot:_06_group
validation-221,Out-of-Gas Risk from Gas Gulf in Timelock's Calldata Check Logic, ,"calls are not unbounded - so this is the design choice, also bounding it may brick the resolution calls in distress",Unsatisfactory,,92,:robot:_primary
validation-223,Inconsistent Delay Configuration in `RecoverySpell` Contract, ,insufficient proof,Unsatisfactory,,36,:robot:_primary
validation-224,Front-running on execute function, ,invalid,Unsatisfactory,,49,:robot:_primary
validation-235,Premature Pause Termination Vulnerability in _updatePauseDuration Function Enables Cooldown Bypass and Unauthorized Actions, ,insufficient proof - spam - not validating the other submissions due to spamming the contest,Unsatisfactory,,47,:robot:_07_group
validation-236,Incorrect ERC165 implementation in `supportsInterface` function due to multiple overrides, ,insufficient proof,Unsatisfactory,,68,:robot:_37_group
validation-237,CREATE2 Address Collision in Whitelisted Calls Enables Malicious Contract Replacement, ,insufficient proof,Unsatisfactory,,220,:robot:_18_group
validation-238,Insufficient Overlap Detection in Calldata Validation Allows Ambiguous Access Controls, ,"the issue is not referring to the root cause properly, not duping",Unsatisfactory,,72,:robot:_10_group
validation-239,Missing Array Length Validation in Timelock Initialization Can Lead to Incorrect Access Control Setup, ,insufficient proof,Unsatisfactory,,71,:robot:_12_group
validation-240,Guard's Operation Type Validation Bypass Allows Unauthorized Delegate Calls Through Empty Self-Calls, ,insufficient proof,Unsatisfactory,,83,:robot:_54_group
validation-241,"Hardcoded 365-Day Check Fails to Account for Leap Years in Recovery Delay Validation""", ,insufficient proof,Unsatisfactory,,59,:robot:_primary
validation-242,Insufficient Unique Signature Validation Allows Recovery with Fewer Signatures Than Required Threshold, ,insufficient proof,Unsatisfactory,,188,:robot:_25_group
validation-243,Non-Standard EIP-712 Implementation in RecoverySpell Contract, ,insufficient proof,Unsatisfactory,,176,:robot:_primary
validation-244,Signature Replay Attack Possible Due to Missing Nonce in Recovery Authorization Process, ,insufficient proof,Unsatisfactory,,228,:robot:_primary
validation-245,Block Timestamp Manipulation Enables Early Recovery Execution by Circumventing Delay Period, ,insufficient proof,Unsatisfactory,,247,:robot:_primary
validation-246,Persistent Transient Storage in Constructor Allows Creation of Recovery Spells with Duplicate Owners, ,insufficient proof as the transient storage is isolated and has no carry over data,Unsatisfactory,,149,:robot:_47_group
validation-247,Transient Storage Collision in Owner Validation Allows Duplicate Factory Address as Owner, ,insufficient proof as the transient storage is isolated and has no carry over data,Unsatisfactory,,120,:robot:_47_group
validation-248,"Inefficient gas consumption in `calculateAddress` function due to O(n²) duplicate owner validation, potentially leading to transaction failures for large owner sets", ,insufficient proof,Unsatisfactory,,206,:robot:_primary
validation-249,Inconsistent Duplicate Owner Validation Between `calculateAddress` and `createRecoverySpell`, ,insufficient proof,Unsatisfactory,,162,:robot:_47_group
validation-25,The calldata checks which don't overlap partially can't be added.,findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,163,:robot:_10_group
validation-250,Missing Interface Override in revokeRole Function Causes IAccessControl Compatibility Issues, ,insufficient proof,Unsatisfactory,,167,:robot:_69_group
validation-257,One single address can grief all other recipients. , ,hot & cold signers are trusted - hence either the scheduled calls or the instant calls should be trusted. ,Unsatisfactory,,122,:robot:_primary
validation-263,Calldata check can not be added for adjacent parameters,findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,208,:robot:_primary
validation-266,Undistributed funds are not refunded back to the tx senders. , ,OOS -> https://github.com/solidity-labs-io/kleidi/blob/main/docs/EDGECASES.md#wrapped-vs-raw-ether,Unsatisfactory,,155,:robot:_48_group
validation-268,Pause function can be bricked,findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,120,:robot:_primary
validation-269,address.code.length can return false-positives, ,should be in the QA report - does not hold the bar to be an audit report,Unsatisfactory,,35,:robot:_primary
validation-270,Attacker has the ability to steal funds from the timelock contract. , ,insufficient proof,Unsatisfactory,,121,:robot:_primary
validation-271,`Timelock.sol` is vulnerable to ABI smuggling when executing calls to other contracts that take raw bytes as one of the arguments, ,invalid,Unsatisfactory,,157,:robot:_primary
validation-273,no check on the call value allows a malicious HOT_SIGNER_ROLE to potentially steal ETH, ,OOS-> https://github.com/solidity-labs-io/kleidi/blob/main/docs/EDGECASES.md#wrapped-vs-raw-ether,Unsatisfactory,,29,:robot:_primary
validation-274,Gas griefing/attack via creating the proposals,findings-5, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L521,115,:robot:_primary
validation-275,"On `Timelock.sol` `revokeHotSigner` function should only be called by the timelock or the safe, but it can only be called by the safe.", ,NATSPEC mismatch and the case is handled as per the audit report pdf,Unsatisfactory,,111,:robot:_35_group
validation-276,"If the recovery owner is compromised, the wallet can be stolen and drained by the attacker in certain circumstances",validation-63,refers partially to the setter logic,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpell.sol#L165-L317,48,:robot:_36_group
validation-277,Recovery Spell Signature Verification Bypass Through EOA Self-Destruct, ,insufficient proof,Unsatisfactory,,163,:robot:_primary
validation-278,Timelock Salt Reuse Vulnerability Allows Transaction Front-Running and Delay Mechanism Bypass, ,the submission does not provide step by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,178,:robot:_14_group
validation-279,Unauthorized Safe Recovery Due to Missing Recovery Initiation Controls, ,insufficient proof,Unsatisfactory,,118,:robot:_primary
validation-28,Execution of the recovery will be blocked by the Guard as the operation is set to DelegateCall, ,The function calls the Safe as a module not the Guard - confusion,Unsatisfactory,,49,:robot:_04_group
validation-280,Unnecessary Contract Deployments Before Prerequisite Check Leads to Gas Waste, ,insufficient proof,Unsatisfactory,,151,:robot:_primary
validation-281,"Once a recovered safe's keys are compromised, other chains can be enforced to change their owners to the compromised ones", ,OOS -> Q-12,Unsatisfactory,,37,:robot:_primary
validation-284,"The `_updatePauseDuration` function do not check if the contract is unpaused. And no check for if the contract was already paused, reset the pauseStartTime to 0",validation-284,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/ConfigurablePause.sol#L104,50,:robot:_07_group
validation-29,"Kleidi wallet cannot be created if user's safe version is 1,5+ ",,the system is designed for Safe 1.3.0 : https://github.com/solidity-labs-io/kleidi/blob/main/docs/DEPLOYMENT.md,Unsatisfactory,,129,:robot:_primary
validation-3,Lack of Pause Status Check in _updatePauseDuration Function,validation-284, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/ConfigurablePause.sol#L104,65,:robot:_07_group
validation-30,Hash collisions, ,insufficient report,Unsatisfactory,,142,:robot:_45_group
validation-33,Improper Removal of Wildcard Calldata Check in Timelock Contract, ,"wildcard checks have an empty dataHashes set, and attempting to remove any data hash from an empty set will fail",Unsatisfactory,,181,:robot:_02_group
validation-34,Duplicate signatures can bypass recovery multi-sig threshold in RecoverySpell, ,insufficient proof as the coded POC is not demonstrating the issue in any means,Unsatisfactory,,172,:robot:_25_group
validation-40,`RecoverySpellFactory::_paramChecks` doesn't check for `SENTINEL_OWNERS` making it possible to create unusable recovery spells,validation-40,primary - I think this should be more of a QA as the malicious owner can put any arbitrary adress which makes it unrecoverable anyways,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpellFactory.sol#L118-L138,148,:robot:_03_group
validation-41,`RecoverySpellFactory::_paramChecks` doesn't check if an owner is the same as the safe making it possible to create unusable recovery spells,validation-41,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpellFactory.sol#L118-L138,156,:robot:_primary
validation-52,Malicious pauseGuardian can DOS protocol, ,setGuardian is resolving this as the guardian is automatically popped,Unsatisfactory,,39,:robot:_primary
validation-53,"Wrong handling of call data check indices, forcing it sometimes to revert",validation-53,primary,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L1136,246,:robot:_primary
validation-63,"Recovery spells don't allow the addition or removal of owners, potentially leading to the compromisation of the wallet",validation-63,primary ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/RecoverySpell.sol#L165-L317,35,:robot:_36_group
validation-66,Possible loss of funds because the `_execute` function allow valid calls to be made to addresses without code, ,hot & cold signers are trusted - hence either the scheduled calls or the instant calls should be trusted. ,Unsatisfactory,,109,:robot:_primary
validation-67,Inaccessible Functions Due to Incorrect onlyTimelock() Modifier, ,insufficient proof,Unsatisfactory,,49,:robot:_50_group
validation-68,"Duplicate owner addresses bypass expected owner threshold, reducing Safe security", ,the submission does not provide step by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,242,:robot:_primary
validation-69,SystemDeploy cannot be used to deploy the system in Arbitrum and Optimism,validation-13, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/deploy/SystemDeploy.s.sol#L21-L28,52,:robot:_22_group
validation-7,abi.encodePacked() should not be used with dynamic types when passing the result to a hash function such as keccak256(), ,insufficient report,Unsatisfactory,,20,:robot:_45_group
validation-70,Lack of Access Control on createSystemInstance Function Allows Unauthorized System Deployments, ,insufficient proof,Unsatisfactory,,102,:robot:_29_group
validation-71,Unsafe Usage of delegateCall in Multicall Allows Potential Storage Corruption or Reentrancy Attacks, ,insufficient proof,Unsatisfactory,,96,:robot:_17_group
validation-72,Lack of Validation for Recovery Spells Could Introduce Backdoors or Malicious Behavior, ,insufficient proof,Unsatisfactory,,63,:robot:_01_group
validation-73,No Fallback or Retry Mechanism if Safe Creation Fails Could Lead to Inconsistent State, ,insufficient proof,Unsatisfactory,,71,:robot:_01_group
validation-74,Some bytes may be emitted when we check the call data,findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,80,:robot:_24_group
validation-75,Improper Handling of Invalid or Reused Signatures in Recovery Process Could Lead to Unauthorized Recovery Execution, ,insufficient proof,Unsatisfactory,,66,:robot:_25_group
validation-76,maximum delay for timelocked operations can be bypassed,,"the protocol intends to schedule the calls more than minDelay, hence, the max_Delay is only used to determine the point of minDelay. If the minDelay would be equal to Max_delay at the constructor then this behaviour would be more clear since the scheduled ids would everytime go beyond 30 days. ",Unsatisfactory,,33,:robot:_primary
validation-77,Reentrancy Risk in execTransactionFromModule During Recovery Process Can Lead to Unauthorized Actions, ,insufficient proof,Unsatisfactory,,57,:robot:_26_group
validation-78,No Validation of Recovery Delay Relative to Safe Timelock Could Lead to Unsafe Recovery Execution, ,insufficient proof,Unsatisfactory,,66,:robot:_38_group
validation-79,Duplicate Owners Can Bypass Security Checks in the Creation of RecoverySpell Contracts, ,insufficient proof,Unsatisfactory,,91,:robot:_47_group
validation-8,aad, ,null,Unsatisfactory,,20,:robot:_primary
validation-80,Improper Validation of Safe Existence Could Lead to Broken Recovery Process, ,insufficient proof,Unsatisfactory,,97,:robot:_01_group
validation-81,Setting high expirationPeriod bricks contract, ,no security concern as there could be another schedule with different salt anyway,Unsatisfactory,,53,:robot:_primary
validation-82,Uncontrolled Salt Usage in CREATE2 Lead to Denial of Service via Contract Front-Running, ,insufficient proof,Unsatisfactory,,79,:robot:_40_group
validation-84,Excessive Gas Consumption in executeBatch and Limit Issue , ,insufficient proof,Unsatisfactory,,55,:robot:_42_group
validation-85,Recovery Spell will OOG if there are too many current safe owners., ,"the submission does not provide how many owners should it require to revert the call. the POC shows 4000 iterations. if so, not realistic",Unsatisfactory,,47,:robot:_36_group
validation-86,It's impossible to add a calldata check for neighboring byte portions (and more implications),findings-2, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L1119-L1123,178,:robot:_24_group
validation-89,DoS in pause function due to unbounded loop over proposals,findings-4, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/Timelock.sol#L687,88,:robot:_06_group
validation-90,Timelock can take a contract off pause.,validation-284, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/main/src/ConfigurablePause.sol#L104,78,:robot:_07_group
validation-91,executeRecovery safe problem, ,invalid,Unsatisfactory,,14,:robot:_primary
validation-10,Protocol does not implement `EIP712` correctly on multiple occasions, ,the protocol does not endorse any EIP compliance - https://github.com/code-423n4/2024-10-kleidi#eip-compliance,Unsatisfactory,,68,:robot:_primary
validation-100,Timelock operations can be executed due to incorrect usage of `expirationPeriod`,validation-15, ,Satisfactory,https://github.com/code-423n4/2024-10-kleidi/blob/ab89bcb443249e1524496b694ddb19e298dca799/src/Timelock.sol#L413-L422,149,:robot:_11_group
validation-101,"eth can be lost in ""Timelock""", ,insufficient report,Unsatisfactory,,24,:robot:_primary
validation-11,Missing  refund of excess ether in `_execute()`, ,OOS -> https://github.com/solidity-labs-io/kleidi/blob/main/docs/EDGECASES.md#wrapped-vs-raw-ether,Unsatisfactory,,95,:robot:_77_group
validation-110,Incorrect onlyTimelock modifier restricts function calls to the contract itself, ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,62,:robot:_primary
validation-116,Recovery struct is not defined which doesn't comply with eip712, ,spam,Unsatisfactory,,71,:robot:_primary
validation-122,execute function can be still called after reschedule a proposal made., ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,24,:robot:_primary
validation-123,"Wrong check performed under _addCalldataCheck, which makes the function to execute even if the start and end indexes are same.", ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,37,:robot:_primary
validation-143,There is Missing Fallback for Pause Guardian Assignment Results in Unmanageable Unpaused State, ,invalid -  the guardian has a setter,Unsatisfactory,,186,:robot:_primary
validation-147,Self-call check in `checkTransaction()` can be bypassed  via smart contract wallets, ,"Regardless of who initiates the transaction (EOA or smart contract wallet), msg.sender in the Guard's checkTransaction function remains the Safe contract.",Unsatisfactory,,53,:robot:_primary
validation-170,Guardian Role Can Block Timelock Operations and Cancel Proposals, ,"if the guardian is malicious, they have one bullet to spend since they will be popped. this is the intended mechanism and it will be re-set by the timelock again",Unsatisfactory,,147,:robot:_05_group
validation-171,"Privilege Escalation in Timelock allows hot signers to execute administrative functions through whitelisted calls, bypassing timelock governance controls.", ,invalid,Unsatisfactory,,108,:robot:_primary
validation-172,"Race condition where operations can be cleaned up multiple times, breaking core timelock functionality and security assumptions.", ,spam - not validating further from the submitter,Unsatisfactory,,62,:robot:_primary
validation-173,"Overflow can bypass timelock waiting periods, allowing immediate execution of scheduled operations.", ,insufficient report,Unsatisfactory,,79,:robot:_30_group
validation-175,Unchecked Value Accumulation Leading to Arithmetic Overflow, ,insufficient report,Unsatisfactory,,146,:robot:_primary
validation-181,Large batch sizes can lead to DoS attacks by consuming excessive gas, ,insufficient report,Unsatisfactory,,113,:robot:_primary
validation-184,Potential Address Collision in create2 Deployment due to Missing chainId in Salt Calculation, ,insufficient proof,Unsatisfactory,,66,:robot:_primary
validation-186,Cancelled Operations Can Be Re-executed Due To Timestamp Invalidation Issue, ,insufficient report,Unsatisfactory,,145,:robot:_primary
validation-191,MEV bots can extract value by manipulating transaction ordering, ,insufficient report,Unsatisfactory,,111,:robot:_primary
validation-193, Incorrect Handling of Function Selector Extraction in getFunctionSignatur, ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,71,:robot:_primary
validation-194,Lack of Input Length Limitation in sliceBytes Function, ,spam - not validating further,Unsatisfactory,,79,:robot:_primary
validation-226,Fund Loss During Batch Operation Execution, ,known issue -> https://github.com/solidity-labs-io/kleidi/blob/main/docs/EDGECASES.md#wrapped-vs-raw-ether,Unsatisfactory,,99,:robot:_39_group
validation-227,Error in Extraction of Function Signature, ,counter to Q-23 ,Unsatisfactory,,39,:robot:_primary
validation-228,Dos on Expired Operations that Needs Reschedule, ,cant be a DOS due to same can be re-scheduled with a  different Salt,Unsatisfactory,,40,:robot:_20_group
validation-229,Unauthorized and Unrecoverable Privilege Escalation via Reentrancy and Ignored Return Values resulting in significant compromise of the contract’s security and integrity, ,spam,Unsatisfactory,,45,:robot:_26_group
validation-23,Caller may use Ether held in contract without sending their own, ,OOS -> https://github.com/solidity-labs-io/kleidi/blob/main/docs/EDGECASES.md#wrapped-vs-raw-ether,Unsatisfactory,,93,:robot:_primary
validation-230,"An attacker can exploit reentrancy during the proposal build process to call _simulateActions multiple times, causing unexpected proposal execution flow.", ,spam,Unsatisfactory,,38,:robot:_primary
validation-231,Reentrancy in InstanceDeployer.createSystemInstance() Leading to Inconsistent Event Emission, ,spam,Unsatisfactory,,31,:robot:_95_group
validation-232,Reentrancy in InstanceDeployer.createSystemInstance() Causing Failed Safe Creation Reporting, ,spam,Unsatisfactory,,32,:robot:_primary
validation-233,Reentrancy in RecoverySpell.executeRecovery() Leading to Inconsistent Recovery, ,spam,Unsatisfactory,,30,:robot:_primary
validation-234,Timestamp Manipulation in RecoverySpell.executeRecovery() Causing Early or Delayed Recovery, ,spam,Unsatisfactory,,28,:robot:_31_group
validation-24,Timelock is missing modifier on execute function, ,anyone can call execute - this is intended,Unsatisfactory,,311,:robot:_50_group
validation-252,Reliance on block.timestamp for Critical Contract Logic on ConfigurablePause contract, ,inflated and does not hold the bar to be an audit report,Unsatisfactory,,23,:robot:_primary
validation-253,The use of same salt and address for replay or frontrunning, ,insufficient proof,Unsatisfactory,,62,:robot:_14_group
validation-254,DoS with Block Gas Limit in pause() Function on Timelock, ,"the issue does not refer to root causes fully, hence not duping under",Unsatisfactory,,108,:robot:_06_group
validation-255,The duplicate owner check fails in 'createRecoverySpell', ," The found variable is assigned before any storage updates, capturing the state prior to the current iteration's changes. The require(!found, ...) uses the value of found as it was when tload(owner) was called, ensuring accurate detection of duplicates.",Unsatisfactory,,58,:robot:_primary
validation-256,Unchecked External Call in Timelock::_execute, ,OOS --> Q-09,Unsatisfactory,,49,:robot:_primary
validation-258,Unsecured Usage of `CREATE2` and `SALT` in TimelockFactory::createTimelock, ,OOS --> Q-26,Unsatisfactory,,41,:robot:_primary
validation-259,Insufficient Input Validation in 'createTimelock', ,the submission does not provide step by step demonstration of the issue and the reasoning. Cant mark satisfactory as the reports should be in a QA report and not holding th ebar to be an audit report,Unsatisfactory,,54,:robot:_primary
validation-260,Insecure Address Pre-computation in AddressCalculation.sol, ,OOS --> Q-26,Unsatisfactory,,31,:robot:_primary
validation-261,Missing Access Control on createTimelock Function, ,spam,Unsatisfactory,,129,:robot:_primary
validation-262,Incomplete Input Validation in Create2Helper.sol, ,"inflated and does not hold the bar to be an audit report. Also adding a check like require(creationCode.length > 0, ""Length of creationCode is zero.""); would prevent legitimate use cases where an empty creationCode might be acceptable in a particular context.",Unsatisfactory,,60,:robot:_primary
validation-264,Transaction Cancellation Bypass in Guard.sol, ,spam,Unsatisfactory,,106,:robot:_primary
validation-265,Reuse of Fixed Salt in CREATE2 Deployments Leading to Predictable Contract Addresses, ,spam,Unsatisfactory,,89,:robot:_40_group
validation-267,Salt Generation and Frontrunning Risk in addresscalculation.sol, ,spam,Unsatisfactory,,112,:robot:_52_group
validation-272,Timelock Salt Derivation Issue in addresscalculation.sol, ,spam,Unsatisfactory,,100,:robot:_primary
validation-35,Missing `calls3` validation in `executeRecovery()`, ,The omission of the assertion in executeRecovery() does not compromise the function's correctness. The loops and index management inherently ensure that all calls are added to calls3. Including the assertion could be considered redundant and unnecessary in this context.,Unsatisfactory,,52,:robot:_primary
validation-37,"In emergency situations where the contract needs to be paused, some operations may remain executable, leading to unauthorized actions and financial losses.", ,invalid - timestamps are deleted during pause(),Unsatisfactory,,100,:robot:_09_group
validation-38,Executed Operations Can Be Cancelled in Timelock Contract, ,invalid,Unsatisfactory,,87,:robot:_09_group
validation-39,Inconsistent Batch and Individual Operation Scheduling in Timelock Contract, ,spam,Unsatisfactory,,79,:robot:_primary
validation-42,Cancelled operations could potentially be re-executed., ,spam,Unsatisfactory,,51,:robot:_09_group
validation-43,`owners` not validated in `createSystemInstance()`, ,inflated as it should be in the QA report and does not provide the bar to be an audit report as it does not properly refer how it could be triggered as such ,Unsatisfactory,,46,:robot:_primary
validation-44,"Users could execute operations before the intended timelock period has passed, bypassing the security measures put in place by the timelock mechanism.", ,spam,Unsatisfactory,,83,:robot:_primary
validation-45,"external call (`_execute`) is made before the operation's status is updated, allowing for potential reentrancy.", ,spam,Unsatisfactory,,72,:robot:_13_group
validation-46,"The absence of a validation check in the `removeCalldataCheck` function allows any address to be passed as the `contractAddress`, including the timelock's own address or its safe's address.", ,timelock contract cant be added to calldatachecks,Unsatisfactory,,47,:robot:_02_group
validation-48,Insufficient Calldata Validation in Timelock's Whitelisted Execution, ,spam,Unsatisfactory,,63,:robot:_18_group
validation-49,Timelock Contract Inconsistency in Operation Cancellation, ,spam,Unsatisfactory,,57,:robot:_09_group
validation-51,Incorrect pause state determination in `paused()` function, ,"invalid as max pause duration is 30 days and cant hold true for the statemen: ""In this case, the function will return true (meaning paused) if block.timestamp <= pauseDuration.""",Unsatisfactory,,57,:robot:_primary
validation-54,"Multiple executions of the same operation, potentially draining funds.", ,insufficient proof - only safe can schedule,Unsatisfactory,,102,:robot:_13_group
validation-55,"Multiple executions of the same operation `executeBatch` function, potentially draining funds from the contract.", ,insufficient proof,Unsatisfactory,,147,:robot:_13_group
validation-56,"`_execute` function allows arbitrary external calls, which could potentially call back into the Timelock contract and modify its state.", ,insufficient proof,Unsatisfactory,,75,:robot:_13_group
validation-57,"""calculateCreate2Address""  is vulnerable to a birthday attack", ,spam,Unsatisfactory,,110,:robot:_primary
validation-58,"Each iteration of the loop in `executeWhitelistedBatch` makes an external call, potentially allowing malicious contracts to reenter", ,insufficient proof,Unsatisfactory,,101,:robot:_13_group
validation-59,Operations may appear active in some parts of the contract while being considered cleaned up in others., ,"insufficient proof - require(isOperationExpired(id), ""Timelock: operation not expired"");",Unsatisfactory,,111,:robot:_09_group
validation-60,"Execution of expired operations, potentially violating governance rules.", ,spam,Unsatisfactory,,85,:robot:_primary
validation-61,"Unexpected behavior when the contract is unpaused, as it may report ongoing operations when there are none.", ,insufficient proof,Unsatisfactory,,95,:robot:_09_group
validation-64,Multiple State Changes in Single Transaction Violate assumptions made by other parts of the system or external contracts interacting with the Timelock, ,insufficient proof,Unsatisfactory,,114,:robot:_13_group
validation-65,Unchecked External Calls in Timelock Contract Allow State Manipulation, ,insufficient proof,Unsatisfactory,,36,:robot:_13_group
validation-9,`onlySafe` modifier  in `revokeHotSigner()` prevents timelock execution, ,NATSPEC mismatch and the case is handled as per the audit report pdf,Unsatisfactory,,57,:robot:_primary
validation-92,"Inconsistent state where the expiration period is shorter than the minimum delay, allowing operations to expire before they're eligible for execution", ,insufficient proof,Unsatisfactory,,56,:robot:_primary
validation-93,"Premature cleanup of operations that are still within their valid timeframe. It can result in the cancellation of legitimate, non-expired proposals", ,insufficient proof,Unsatisfactory,,89,:robot:_09_group
validation-94,"The supportsInterface function of the Timelock contract does not comply with ERC721 and ERC1155, destroying composability", ,insufficient proof,Unsatisfactory,,49,:robot:_primary
validation-96,"calldata validation in checkCalldata is too strict, causing valid whitelisted operations to revert unexpectedly.", ,insufficient proof,Unsatisfactory,,138,:robot:_10_group
validation-99,"Allowing setting the `minDelay` to the same value without reverting, violates the expected behavior and could lead to unintended consequences.", ,spammish,Unsatisfactory,,58,:robot:_34_group